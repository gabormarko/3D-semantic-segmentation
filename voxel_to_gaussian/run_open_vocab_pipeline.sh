#!/bin/bash
# Run Open-Vocabulary 3D Labeller pipeline

# Set input file paths and prompts here
VOXEL_FILE="/home/neural_fields/Unified-Lift-Gabor/cuda_project_image_to_sparse_voxel/voxel_feature_checkpoints_vox59293/ALL_nonzero_voxel_features_232.pt"         # Change to your voxel feature file
GAUSSIAN_PLY="/home/neural_fields/gaussian-splatting/output/cc946f8b-f/point_cloud/iteration_45000/point_cloud.ply"   # Input .ply file with Gaussian properties
GAUSSIAN_FILE="/home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/gaussians_pos.npy"   # Output file for extracted centers
MAP_FILE="/home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/gauss2voxel.npy"      # Will be generated by build_map
LABELS_OUT="/home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/gaussian_labels.npz" # Output file for per-Gaussian labels
PROMPTS=("chair" "table" "lamp")         # List your prompts here
DEVICE="cuda"                            # "cuda" or "cpu"

# Step 0: Extract Gaussian centers from .ply
python3 /home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/extract_gaussian_centers.py \
    --ply "$GAUSSIAN_PLY" \
    --out "$GAUSSIAN_FILE"

# Step 1: Build map (Gaussian â†’ nearest voxel)
python3 /home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/voxeltoGaussian.py build_map \
    --vox "$VOXEL_FILE" \
    --gauss "$GAUSSIAN_FILE" \
    --out "$MAP_FILE"

# Step 2: Query (assign labels)
python3 /home/neural_fields/Unified-Lift-Gabor/voxel_to_gaussian/voxeltoGaussian.py query \
    --vox "$VOXEL_FILE" \
    --map "$MAP_FILE" \
    --prompt "${PROMPTS[@]}" \
    --out "$LABELS_OUT" \
    --device "$DEVICE"

echo "Pipeline complete. Output: $LABELS_OUT"
