Output folder: ./output/Unifed_lift//figurines [23/03 19:28:06]
Reading camera 303/303 [23/03 19:28:07]
Loading Training Cameras [23/03 19:28:07]
Loading Test Cameras [23/03 19:28:26]
Number of points at initialisation :  50613 [23/03 19:28:26]
Num classes:  256 [23/03 19:28:26]
train_unified_lift.py:297: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  code_book = torch.tensor(classifier.weight.reshape(256, 16), requires_grad=True, device="cuda")









Training progress:   0%| | 100/30000 [00:19<1:39:46,  4.99it/s, Loss=1.0223345, Fea: tensor([4989.5688], device='cuda:0', grad_fn=<DivBackward0>), reg: 0.15082937479019165, classification: 0.96218407154












































Training progress:   2%| | 550/30000 [02:15<2:22:48,  3.44it/s, Loss=0.7806063, Fea: tensor([3247.4233], device='cuda:0', grad_fn=<DivBackward0>), reg: 1.779571294784546, classification: 0.7961765527725Traceback (most recent call last):
  File "train_unified_lift.py", line 582, in <module>
    training(lp.extract(args), op.extract(args), pp.extract(args), args.test_iterations, args.save_iterations, args.checkpoint_iterations, args.start_checkpoint, args.debug_from, args.use_wandb, args.weight_loss)
  File "train_unified_lift.py", line 357, in training
    contrastive_loss,regularization= get_contrastive_loss(objects, gt_obj)
  File "train_unified_lift.py", line 197, in get_contrastive_loss
    phi_list[i] = torch.norm(cluster - u_list[i], dim=1, keepdim=True).sum() / (cnums[i] * torch.log(cnums[i] + 10))
KeyboardInterrupt